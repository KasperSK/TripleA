//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using CashRegister.Models;

namespace CashRegister.Sales
{
    using Payment;
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// Controls sales
    /// </summary>
    public interface ISalesController 
	{
		/// <summary>
		/// Adds a product to the current order
		/// </summary>
		void AddProductToOrder(Product product);

        /// <summary>
	    /// Returns the current order
	    /// </summary>
	    SalesOrder GetCurrentOrder();

        /// <summary>
        /// Remove a product from SalesOrder
        /// </summary>
        void RemoveProductFromOrder(Product product);

	    /// <summary>
	    /// Prints an order
	    /// </summary>
	    void CreateAndPrintReceipt(SalesOrder order);


        /// <summary>
        /// clear SalesOrder
        /// </summary>
        void ClearOrder();

		/// <summary>
		/// Starts a new SalesOrder with a new id
		/// </summary>
		void StartNewOrder();

		/// <summary>
		/// Cancel transactions, clear SalesOrder
		/// </summary>
		void CancelOrder();

		/// <summary>
		/// Save an Order as incomplete
		/// </summary>
		void SaveIncompleteOrder();

		/// <summary>
		/// Starting payment on a SalesOrder
		/// </summary>
		void StartPayment(IPaymentProvidorDescriptor provider, long amountToPay);

		/// <summary>
		/// Get info on the amount missing on the SalesOrder
		/// </summary>
		long MissingPaymenOnOrder();

		/// <summary>
		/// Add an transaction to the order
		/// </summary>
		void AddTransaction(Models.Transaction trans);

	    /// <summary>
	    /// Gets a list of all incomplete orders by default current data (or within a certain date or time)
	    /// </summary>
	    List<SalesOrder> GetIncompleteOrders(DateTime start, DateTime end);

        /// <summary>
        /// Get an incomplete order
        /// </summary>
        void RetrieveIncompleteOrder(int OrderId, DateTime Date1, DateTime Date2);

	}
}

